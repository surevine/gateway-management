# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="Tlf@1anBZX]Q]W3jGKeWj0dCTY7F29C1I>haC4lbKGPw2/BrUF;OXkUkRlK8^8AI"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# Please ignore: database configuration set in application.db.conf
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.postgresql.Driver
# db.default.url="postgres://user:password@host/database"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Gateway rule properties
gateway.rules.dir="./conf/rules"
gateway.destinations.rules.dir="./conf/rules/destinations"
gateway.template.rule.file="./conf/rules/templates/deny-all.js"

# Authentication mode, supported modes are 'public', 'ldap' and 'remote'
gateway.auth.mode=public

# Uncomment and modify if using 'ldap' authentication
# ldap.host="127.0.0.1"
# ldap.port=389
# ldap.admin.dn="cn=Manager,dc=example,dc=com"
# ldap.admin.password="password"
# ldap.authorised.group.dn="cn=authorised,ou=Groups,dc=example,dc=com"
# ldap.group.member.attribute="member"
# Request header to inspect for username to authenticate via LDAP
# remote.user.header=REMOTE-USER

# Uncomment and modify if using 'remote' authentication
# wildfly.auth.service.base.url="http://localhost:8080/wildfly-auth-proxy"

# Auditing mode, valid modes are 'log' and 'xml'
gateway.audit.mode=log

# Uncomment and modify if using 'xml' auditing
# absolute directory path required
# xml.audit.log.file.directory="/tmp/gateway/audit/logs"
# xml.audit.log.file.template="./conf/audit/logfile-template.xml"
# xml.audit.event.template="./conf/audit/event-template.xml"
# xml.audit.system.environment="DEVELOPMENT"

# SCM federator settings
scm.federator.api.base.url="http://localhost:8080/federated-scm"

# Sanitisation settings
sanitisation.script.repo = "https://github.com/JonnyHeavey/fed-scm-sanitisation-test.git"
sanitisation.script.name = "sanitisation.sh"
sanitisation.working.dir = "/tmp/sanitisation/"

# Environment variable property overrides
gateway.destinations.dir=${?GATEWAY_DESTINATIONS_DIR}
gateway.template.rule.file=${?GATEWAY_TEMPLATE_RULE_FILE}
